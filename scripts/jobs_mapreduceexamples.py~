#!/usr/bin/python

"""
________________________________________________________________
|                                                              |
|                         CODED BY                             | 
|                                                              |
|                                                              | 
| 	     HIMANSHU MAURYA      BHAVISHYA MATHUR             |
|							       | 	
|______________________________________________________________|

"""

import os 
import sys
import set_jps

from sys import argv

"""__________________CLASS START's HERE_____________________________"""


class MRexample:
  # MRexample classes' constructor
  def __init__(self,arguments):
    self.example(arguments)

  # controler function which taker as argumen

  def example(self,arguments):

    for argu in arguments:
      # if argument is 'wordcount' call wordcount count function 
      if argu == 'wordcount':
        self.wordcount()
      '''# if argument is 'n' call restart namenode
      if argu == '':
        self.namenode_restart()
      # if argument is 'j' call restart jobtracker   
      if argu == 'j':
	self.jobtracker_restart()
      # if argument is 'd' call restart datanode
      if argu == 'd':
        self.datanode_restart()
      # if argument is 't' call restart tasktracker
      if argu == 't':
	self.tasktracker_restart()
'''
# function to format namenode
    
  def wordcount(self):    
    filename=raw_input("Enter the file to be processed >")
    output_folder= raw_input("Enter the \"UNIQUE \" output folder>") 
    os.system("hadoop jar /usr/share/hadoop/hadoop-examples-1.2.1.jar wordcount "+filename+" "+output_folder+"")
'''
# function to restart namenode

  def namenode_restart(self):
    os.system("hadoop-daemon.sh stop namenode")
    os.system("hadoop-daemon.sh start namenode")


# function to restart datanode
  def datanode_restart(self):
    os.system("hadoop-daemon.sh stop datanode")
    os.system("hadoop-daemon.sh start datanode")

# function to restart jobtracker

  def jobtracker_restart(self):
    os.system("hadoop-daemon.sh stop jobtracker")
    os.system("hadoop-daemon.sh start jobtracker")


# function to restart tasktracker
  def tasktracker_restart(self):
    os.system("hadoop-daemon.sh stop tasktracker")
    os.system("hadoop-daemon.sh start tasktracker")

'''
""" ______________________________________________________________________"""

# main starts here

if __name__ == "__main__":
  example =  MRexample(argv[1:])
   
  

